diff --git a/node_modules/connectkit/build/index.es.js b/node_modules/connectkit/build/index.es.js
index da2ba29..6b794d0 100644
--- a/node_modules/connectkit/build/index.es.js
+++ b/node_modules/connectkit/build/index.es.js
@@ -4597,6 +4597,14 @@ const useWallets = () => {
         if (b.id === 'walletConnect')
             return -1;
         return 0;
+    })
+        // move infinex to the start
+        .sort((a, b) => {
+        if (a.id === 'xyz.infinex')
+          return -1;
+        if (b.id === 'xyz.infinex')
+          return 1;
+        return 0;
     }));
 };

@@ -6961,7 +6969,7 @@ const ConnectorItem = ({ wallet, isRecent, }) => {
     const redirectToMoreWallets = isMobile && isWalletConnectConnector(wallet.id);
     // Safari requires opening popup on user gesture, so we connect immediately here
     const shouldConnectImmediately = (detectBrowser() === 'safari' || detectBrowser() === 'ios' || isMobile) &&
-        isCoinbaseWalletConnector(wallet.connector.id);
+        (isCoinbaseWalletConnector(wallet.connector.id) || wallet.connector.id === 'xyz.infinex');
     if (redirectToMoreWallets || shouldConnectImmediately)
         deeplink = undefined; // mobile redirects to more wallets page
     return (jsxs(ConnectorButton, { type: "button", as: deeplink ? 'a' : undefined, href: deeplink ? deeplink : undefined, disabled: context.route !== routes.CONNECTORS, onClick: deeplink
@@ -6972,6 +6980,7 @@ const ConnectorItem = ({ wallet, isRecent, }) => {
                 }
                 else {
                     if (shouldConnectImmediately) {
+                        console.log('[CONNECTKIT]: connecting immediately');
                         connect({ connector: wallet === null || wallet === void 0 ? void 0 : wallet.connector });
                     }
                     context.setRoute(routes.CONNECT);
@@ -8013,10 +8022,16 @@ const ConnectWithInjector = ({ switchConnectMethod, forceState }) => {
             setStatus(states$1.UNAVAILABLE);
         }
     };
+    const shouldConnectImmediately = (detectBrowser() === 'safari' || detectBrowser() === 'ios') && wallet.connector.id === 'xyz.infinex';
     let connectTimeout;
     useEffect(() => {
         if (status === states$1.UNAVAILABLE)
             return;
+        if (shouldConnectImmediately) {
+            console.log('[CONNECTKIT]: Skipping spinner delayed connect for safari');
+            return;
+        }
+
         // UX: Give user time to see the UI before opening the extension
         connectTimeout = setTimeout(runConnect, 600);
         return () => {
